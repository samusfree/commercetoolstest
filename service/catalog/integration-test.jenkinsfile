pipeline {
  agent {
    kubernetes {
      yaml """
apiVersion: v1
kind: Pod
metadata:
  jenkins-agent: daemonless
spec:
  containers:
    - name: java
      image: azul/zulu-openjdk-alpine:11.0.10
      command:
        - cat
      tty: true
    - name: kaniko
      image: gcr.io/kaniko-project/executor:v1.5.1-debug
      command:
      - cat
      tty: true
      volumeMounts:
        - name: harbor-auth
          mountPath: /kaniko/.docker/
  volumes:
    - name: harbor-auth
      secret:
        secretName: harbor-auth
        items:
          - key: config.json
            path: config.json
"""
    }
  }
  stages {
    stage("Checkout") {
      steps {
        checkout scm
      }
    }

    stage("Build") {
      steps{
        container('java') {
          withCredentials([usernamePassword(credentialsId: "oxy-artifactory", usernameVariable: "ORG_GRADLE_PROJECT_artifactory_username", passwordVariable: "ORG_GRADLE_PROJECT_artifactory_password")]) {
            sh './gradlew build --no-daemon'
          }
        }
      }
    }

    stage("Test") {
      steps{
        container('java') {
          withCredentials([usernamePassword(credentialsId: "oxy-artifactory", usernameVariable: "ORG_GRADLE_PROJECT_artifactory_username", passwordVariable: "ORG_GRADLE_PROJECT_artifactory_password")]) { 
          }
        }
      }
    }

    stage("Build & Publish") {
      steps {
        container('kaniko') {
          sh '/kaniko/executor -f $(pwd)/Dockerfile -c $(pwd) --destination=harbor.e2x.com/kata-demo:latest --build-arg IMAGE_VERSION=$(grep appVersion gradle.properties | cut -d \'=\' -f2) --build-arg GIT_REV=${GIT_COMMIT}'
        }
      }
    }
  }
  post {
    always {
      junit "build/test-results/**/*.xml"
    }

    failure {
      script {
        def emailSubject = "Build Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}"
        def emailBody = "See: ${env.BUILD_URL}"
        emailext(body: emailBody, subject: emailSubject, to: "kata-dev@e2x.com", replyTo: "infra@e2x.com")
      }
    }

    unstable {
      script {
        def emailSubject = "Build Unstable: ${env.JOB_NAME} #${env.BUILD_NUMBER}"
        def emailBody = "See: ${env.BUILD_URL}"
        emailext(body: emailBody, subject: emailSubject, to: "kata-dev@e2x.com", replyTo: "infra@e2x.com")
      }
    }

    fixed {
      script {
        def emailSubject = "Build Fixed: ${env.JOB_NAME} #${env.BUILD_NUMBER}"
        def emailBody = "See: ${env.BUILD_URL}"
        emailext(body: emailBody, subject: emailSubject, to: "kata-dev@e2x.com", replyTo: "infra@e2x.com")
      }
    }
  }
}
